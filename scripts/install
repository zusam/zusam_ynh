#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

app="$YNH_APP_INSTANCE_NAME"

domain="$YNH_APP_ARG_DOMAIN"
path_url="$YNH_APP_ARG_PATH"
is_public=1 # true
language="$YNH_APP_ARG_LANGUAGE"

# phpversion can be changed but it's better to keep the default one
phpversion="${YNH_DEFAULT_PHP_VERSION}"

# necessary for the official php helper
YNH_PHP_VERSION="$phpversion"

# php dependencies
php_extensions="\
  php$phpversion-curl \
  php$phpversion-imagick \
  php$phpversion-intl \
  php$phpversion-mbstring \
  php$phpversion-sqlite3 \
  php$phpversion-xml \
"

# Normalize the URL path syntax
path_url="$(ynh_normalize_url_path --path_url="$path_url")"

# Remove leading "/"
path_name="$(str_remove_leading "$path_url" '\/')"

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=2

final_path="/var/www/$app"
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app="$app" --domain="$domain" --path_url="$path_url"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=2

ynh_app_setting_set --app="$app" --key=domain --value="$domain"
ynh_app_setting_set --app="$app" --key=path_url --value="$path_url"
ynh_app_setting_set --app="$app" --key=is_public --value="$is_public"
ynh_app_setting_set --app="$app" --key=language --value="$language"
ynh_app_setting_set --app="$app" --key=phpversion --value="$phpversion"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing general dependencies..." --weight=4
ynh_install_app_dependencies "$pkg_dependencies"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1
ynh_app_setting_set --app="$app" --key=final_path --value="$final_path"
ynh_setup_source --dest_dir="$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..." --weight=3
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=2
ynh_system_user_create --username="$app"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring php-fpm..." --weight=3
if is_phpfpm_installed "$phpversion"; then
  ynh_add_fpm_config --package="$php_extensions"
else
  ynh_add_fpm_config --phpversion="$phpversion" --package="$php_extensions"
fi

ynh_replace_string \
    --match_string="upload_max_filesize = 2M" \
    --replace_string="upload_max_filesize = 2048M" \
    --target_file="/etc/php/$phpversion/fpm/php.ini"

ynh_replace_string \
    --match_string="post_max_size = 8M" \
    --replace_string="post_max_size = 2048M" \
    --target_file="/etc/php/$phpversion/fpm/php.ini"

#=================================================
# SPECIFIC SETUP
#=================================================
ynh_script_progression --message="Copying default config..." --weight=2

# Copy the general .env file as a starter config file
cp "$final_path/api/.env" "$final_path/data/config"

#=================================================
# MODIFY A CONFIG FILE
#=================================================
ynh_script_progression --message="Modifying config..." --weight=2

# switch the APP_ENV to prod
ynh_replace_string \
    --match_string="APP_ENV=\"dev\"" \
    --replace_string="APP_ENV=\"prod\"" \
    --target_file="$final_path/data/config"

# generate a random APP_SECRET
ynh_replace_string \
    --match_string="APP_SECRET=\"\[^\"\]*\"" \
    --replace_string="APP_SECRET=\"$(ynh_string_random)\"" \
    --target_file="$final_path/data/config"

# set the path to ffmpeg binary
ynh_replace_string \
    --match_string="FFMPEG_PATH=\"\[^\"\]*\"" \
    --replace_string="FFMPEG_PATH=\"$(command -v ffmpeg)\"" \
    --target_file="$final_path/data/config"

# set the domain
ynh_replace_string \
    --match_string="DOMAIN=\"\[^\"\]*\"" \
    --replace_string="DOMAIN=\"$domain\"" \
    --target_file="$final_path/data/config"

# set the language
ynh_replace_string \
    --match_string="LANG=\"\[^\"\]*\"" \
    --replace_string="LANG=\"$language\"" \
    --target_file="$final_path/data/config"

echo "MAILER_URL=smtp://localhost:25" >> "$final_path/data/config"

#=================================================
# SPECIFIC SETUP
#=================================================
ynh_script_progression --message="Copying webapp files..." --weight=1

cp -r "$final_path"/app/dist/* "$final_path/public/"

ynh_script_progression --message="Installing API dependencies..." --weight=3

ynh_install_composer \
    --phpversion="$phpversion" \
    --workdir="$final_path/api" \
    --install_args="--prefer-dist"

ynh_script_progression --message="Additional preparations..." --weight=1

set_app_webapp "$final_path" "$path_name" "$language"

# ensure that the var directory is present
mkdir -p "$final_path/api/var"

ynh_script_progression --message="Preparing database..." --weight=1

# preparing database
"php${phpversion}" "$final_path/api/bin/console" zusam:init "$YNH_APP_ARG_LOGIN" "$YNH_APP_ARG_GROUP" "$YNH_APP_ARG_PASSWORD"

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================
ynh_store_file_checksum --file="$final_path/data/config"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

set_app_permissions

#=================================================
# SETUP APP PERMISSIONS
#=================================================
ynh_script_progression --message="Configuring permissions..." --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
    # unprotected_uris allows SSO credentials to be passed anyway.
    ynh_permission_update --permission "main" --add visitors
    ynh_permission_create --permission "public" --url "/public" --allowed visitors --label "Public links"
fi

#=================================================
# RELOAD NGINX AND PHP-FPM
#=================================================
ynh_script_progression --message="Reloading nginx web server and php-fpm..." --weight=2

ynh_systemd_action --service_name=php${phpversion}-fpm --action=reload
ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of $app completed" --last
